/**
 * ProcessJ Book Code
 * Chapter 3
 * Section 7.3
 * Page 81-82
 */

import std.*;

public void id(chan<int>.read in, chan<int>.write out) {

    while (true) {

        int x;
        x = in.read();
        out.write(x);

    }

}

public void FIFO6(chan<int>.read in, chan<int>.write out) {

    chan<int> c1, c2, c3, c4, c5;

    par {

        id(in, c1.write);
        id(c1.read, c2.write);
        id(c2.read, c3.write);
        id(c3.read, c4.write);
        id(c4.read, c5.write);
        id(c5.read, out);

    }

}

public void number_stream(chan<int>.write out, int count) {

    for(int number = 1; number <= count; number++) {

        println("Writing: " + number);
        out.write(number);

    }

}

public void print_next(chan<int>.read in) {

    while(true) {

        int result = in.read();

        println("Received: " + result);

    }

}

public void main(string[] args) {

    chan<int> a, b;

    int count = 10;

    par {

        FIFO6(a.read, b.write);
        number_stream(a.write, count);
        print_next(b.read);

    }

}
